---
export interface Props {
    id: string,
}
const {id} = Astro.props;
---
<div class="rating-cont">
<div class="rating">
    <form action="" id={id} class="recipe_form">
    <label>
        <input type="radio" name="rating" value="5" id="5">
        <p class='star'>☆</p>
    </label>
    <label>
        <input type="radio" name="rating" value="4" id="4">
        <p class='star'>☆</p>
    </label>
    <label>
        <input type="radio" name="rating" value="3" id="3">
        <p class='star'>☆</p>
    </label>
    <label>
        <input type="radio" name="rating" value="2" id="2">
        <p class='star'>☆</p>
    </label>
    <label>
        <input type="radio" name="rating" value="1" id="1">
        <p class='star'>☆</p>
    </label>
    </form>
</div>
</div>

<style>
.rating-cont {
    border-radius: .5rem;
    background-color: black;
    padding: .5rem 1rem .5rem 1rem;
    width: 80%
}
.rating > form{
display: flex;
flex-direction: row-reverse;
justify-content: center;
}
.star {
    padding: 0;
    margin: 0;
    color: azure;
}

/* HIDE RADIO */
[type=radio] { 
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

/* IMAGE STYLES */
[type=radio] + .star {
  cursor: pointer;
  width: 1.1em;
  font-size: 2rem;
}

/* CHECKED STYLES */
[type=radio]:checked + .star {
    color: #e7fc00;
}

.rating > .star {
position: relative;
width: 1.1em;
font-size: 2rem;
color: #e7fc00;
cursor: pointer;
}

/* Solution ? */
/* .rating > label:has(label > .star:checked) {
    color:red;
} */

/* .rating > label::before {
    position: absolute;
    content: "\2605";
    font-size: 2rem;
    color: #e7fc00;
} */


/* .rating > input {
    all:unset;
}



.rating > label::before{
content: "\2605";
position: absolute;
opacity: 0;
}

.rating > label:hover:before,
.rating > label:hover ~ label:before {
opacity: 1 !important;
}

.rating > input:checked, label {
    content: "\2605";
} */
</style>